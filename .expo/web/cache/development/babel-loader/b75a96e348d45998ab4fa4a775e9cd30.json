{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\React-Native\\\\todo-app\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Header from \"./components/header\";\nimport TodoItem from \"./components/todoItem\";\nimport AddTodo from \"./components/addTodo\";\nimport Sandbox from \"./components/sandbox\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([{\n    text: 'buy coffee',\n    key: '1'\n  }, {\n    text: 'create an app',\n    key: '2'\n  }, {\n    text: 'play on the switch',\n    key: '3'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var pressHandler = function pressHandler(key) {\n    setTodos(function (prevTodos) {\n      return prevTodos.filter(function (todo) {\n        return todo.key != key;\n      });\n    });\n  };\n\n  var submitHandler = function submitHandler(text) {\n    if (text.length > 3) {\n      setText('');\n      setTodos(function (prevTodos) {\n        return [{\n          text: text,\n          key: Math.random().toString()\n        }].concat(_toConsumableArray(prevTodos));\n      });\n    } else {\n      Alert.alert('OOPS', 'Todo must be over 3 characters long', [{\n        text: 'Understood',\n        onPress: function onPress() {\n          return console.log('alert closed');\n        }\n      }]);\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n      console.log('dismissed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(AddTodo, {\n    submitHandler: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        item: item,\n        pressHandler: pressHandler,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  content: {\n    padding: 40,\n    flex: 1\n  },\n  list: {\n    marginTop: 20,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["F:/React-Native/todo-app/App.js"],"names":["React","useState","Header","TodoItem","AddTodo","Sandbox","App","text","key","todos","setTodos","pressHandler","prevTodos","filter","todo","submitHandler","length","setText","Math","random","toString","Alert","alert","onPress","console","log","Keyboard","dismiss","styles","container","content","list","item","StyleSheet","create","flex","backgroundColor","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, FlatList, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport Header from './components/header';\nimport TodoItem from './components/todoItem';\nimport AddTodo from './components/addTodo';\nimport Sandbox from './components/sandbox';\n\nexport default function App() {\n\n  const [todos, setTodos] = useState([\n    { text: 'buy coffee', key: '1' },\n    { text: 'create an app', key: '2' },\n    { text: 'play on the switch', key: '3' }\n  ]);\n\n  const pressHandler = (key) => {\n    setTodos(prevTodos => {\n      return prevTodos.filter(todo => todo.key != key);\n    });\n  };\n\n  const submitHandler = (text) => {\n    if(text.length > 3){\n      setText('');\n      setTodos(prevTodos => {\n        return [\n          { text, key: Math.random().toString() },\n          ...prevTodos\n        ];\n      });\n    } else {\n      Alert.alert('OOPS', 'Todo must be over 3 characters long', [\n        {text: 'Understood', onPress: () => console.log('alert closed') }\n      ]);\n    }\n  };\n  \n  return (\n    // <Sandbox />\n    <TouchableWithoutFeedback onPress={() => {\n      Keyboard.dismiss();\n      console.log('dismissed');\n    }}>\n    <View style={styles.container}>\n      <Header />\n      <View style={styles.content}>\n        <AddTodo submitHandler={submitHandler} />\n        <View style={styles.list}>\n          <FlatList\n            data={todos}\n            renderItem={({ item }) => (\n              <TodoItem item={item} pressHandler={pressHandler} />\n            )}\n          />\n        </View>\n      </View>\n    </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  content: {\n    padding: 40,\n    //backgroundColor: 'grey',\n    flex: 1,\n  },\n  list: {\n    marginTop: 20,\n    //backgroundColor: 'lightgrey',\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}